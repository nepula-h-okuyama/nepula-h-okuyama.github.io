<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experiments Never Fail</title>
    <description>Try and try again
</description>
    <link>http://blog.amay077.net/</link>
    <atom:link href="http://blog.amay077.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 15 Nov 2016 01:01:28 +0900</pubDate>
    <lastBuildDate>Tue, 15 Nov 2016 01:01:28 +0900</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>C# で Reactive PPAP</title>
        <description>&lt;p&gt;エンジニア立ち居振舞いには乗らないが、こういうのには乗ってしまうｗ&lt;br /&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/on0z/items/ef32f79bde5452a2ccec&quot;&gt;Swift3でPPAPキヨシ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C# と Reactice Extension で。&lt;a href=&quot;http://qiita.com/amay077/items/85dfc4bd194f57c52c57&quot;&gt;以前の&lt;/a&gt; をちょっと改造しただけだが。&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//PPAPClass.cs
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Reactive.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Reactive.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PPAPConsole&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PPAPClass&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Pen-Pineapple-Apple-Pen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PPAP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ペン&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;パイナッポー&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;アッポー&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ペン&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WORDS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ペン&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;パイナッポー&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;アッポー&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppapObservable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ランダムに
&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 要素数4のBufferを1ずつズラしてく
&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SelectMany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SequenceEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// パターンと一致したら…
&lt;/span&gt;                    &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Queueの最後
&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// + 空文字(終了判定用)
&lt;/span&gt;                    &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TakeWhile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 空文字になるまで繰り返す
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PPAP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 最初に言うので
&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToObservable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// なんとなく待つ
&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SelectMany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppapObservable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section&quot;&gt;結果&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;PPAP&lt;br /&gt;
パイナッポー&lt;br /&gt;
ペン&lt;br /&gt;
ペン&lt;br /&gt;
アッポー&lt;br /&gt;
ペン&lt;br /&gt;
パイナッポー&lt;br /&gt;
アッポー&lt;br /&gt;
アッポー&lt;br /&gt;
アッポー&lt;br /&gt;
アッポー&lt;br /&gt;
ペン&lt;br /&gt;
アッポー&lt;br /&gt;
ペン&lt;br /&gt;
アッポー&lt;br /&gt;
ペン&lt;br /&gt;
パイナッポー&lt;br /&gt;
アッポー&lt;br /&gt;
ペン&lt;br /&gt;
Pen-Pineapple-Apple-Pen&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;apple-pen と pineapple-pen をうまく活かした感じにしたいですね。&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Nov 2016 23:59:59 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/11/11/reactive_ppap_in_csharp-%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/11/11/reactive_ppap_in_csharp-%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC/</guid>
        
        
        <category>C#</category>
        
        <category>ズンドコキヨシ</category>
        
        <category>ReactiveExtensions</category>
        
      </item>
    
      <item>
        <title>Xamarin.Forms の NavigationPage で戻るボタンを消す＆タイトルを変える</title>
        <description>&lt;p&gt;Xamarin.Forms で &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationPage&lt;/code&gt; を使うと、 iOS では &lt;a href=&quot;https://developer.apple.com/jp/documentation/UserExperience/Conceptual/MobileHIG/Bars/Bars.html#//apple_ref/doc/uid/TP40006556-CH12-SW3&quot;&gt;ナビゲーションバー(UINavigationBar)&lt;/a&gt;、Android では &lt;a href=&quot;https://developer.android.com/design/patterns/actionbar.html&quot;&gt;Action Bar&lt;/a&gt; がそれぞれ使用されます。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;プラットフォーム標準のナビゲーション機能が共通の定義で使えるのは便利ですが、アプリの要件によっては、カスタマイズした場面もあるでしょう。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;戻るボタンを消す&lt;/h2&gt;

&lt;p&gt;戻るボタンを消したい場合、 Page の XAML に &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationPage.HasBackButton=&quot;false&quot;&lt;/code&gt; を追加します。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ContentPage&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xamarin.com/schemas/2014/forms&quot;&lt;/span&gt; 
			 &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;&lt;/span&gt; 
			 &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WorkingWithNavigation.Page2Xaml&quot;&lt;/span&gt;
			 &lt;span class=&quot;na&quot;&gt;NavigationPage.HasBackButton=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
			 &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page 2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;コードでは、 &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationPage.SetHasBackButton(page2, false)&lt;/code&gt; と書けます。&lt;/p&gt;

&lt;p&gt;これを実行すると、下のようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/customize_back_button_in_Xamarin_forms_01.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Page2 に仕掛けているので、iOS では Page2 だけ、戻るボタンが表示されないのが確認できます。&lt;br /&gt;
Android はちょっとわかりにくいですが、ActionBar のアイコンの横に着いている ＜ のアイコンが、 Page2 だけ表示されないのが確認できます。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;戻るボタンのタイトルを変える&lt;/h2&gt;

&lt;p&gt;iOS の UINavigationBar では、戻るボタンには前画面のタイトルが表示されます。&lt;br /&gt;
Xamarin.Forms の NavigationPage も同じくです。&lt;br /&gt;
これを変更するには、 &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationPage.BackButtonTitle=&quot;たいとる&quot;&lt;/code&gt; を使います。&lt;/p&gt;

&lt;p&gt;要注意なのは、これを仕掛けたPageの戻るボタンタイトルが変わるのではなく、 &lt;strong&gt;これを仕掛けたPageが戻り先となる場合に、戻るボタンタイトルが変わる&lt;/strong&gt; ということです。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ContentPage&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xamarin.com/schemas/2014/forms&quot;&lt;/span&gt; 
			 &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;&lt;/span&gt; 
			 &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WorkingWithNavigation.Page2Xaml&quot;&lt;/span&gt;
			 &lt;span class=&quot;na&quot;&gt;NavigationPage.BackButtonTitle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BACK&quot;&lt;/span&gt;
			 &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page 2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;コードでは、 &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationPage.SetBackButtonTitle(page2, &quot;BACK&quot;)&lt;/code&gt; と書けます。&lt;/p&gt;

&lt;p&gt;これを実行すると、下のようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/customize_back_button_in_Xamarin_forms_02.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Page2 に &lt;code class=&quot;highlighter-rouge&quot;&gt;BackButtonTitle=&quot;BACK&quot;&lt;/code&gt; を仕掛けているので、Page2 ではなく、それが戻り先となる Page3 の戻るボタンが「BACK」になっています。&lt;/p&gt;

&lt;p&gt;尚、Android では、戻るボタンは「＜」のアイコンだけなので、この機能は無視されます。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.xamarin.com/guides/xamarin-forms/user-interface/navigation/hierarchical/&quot;&gt;Hierarchical Navigation - Xamarin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xamarin/xamarin-forms-samples/tree/master/Navigation/Hierarchical&quot;&gt;サンプル：Hierarchical Navigation - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://motzcod.es/post/136765476207/changing-ioss-back-button-text-in-xamarinforms&quot;&gt;MotzCod.es by James Montemagno — Changing iOS’s Back Button Text in Xamarin.Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Nov 2016 23:59:59 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/11/05/hiding_and_changing_title_back_button_in_navigation_page_on_xamarin_forms/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/11/05/hiding_and_changing_title_back_button_in_navigation_page_on_xamarin_forms/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Android</category>
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Xamarin.iOS で NSDate を DateTime に変換する</title>
        <description>&lt;p&gt;なんで &lt;code class=&quot;highlighter-rouge&quot;&gt;NSDate&lt;/code&gt; ってこんなにわけわからんの？&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;こんなもの &lt;code class=&quot;highlighter-rouge&quot;&gt;System.DateTime&lt;/code&gt; に変換してやる、えーい！&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Foundation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;YourNameSpace&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NSDateExtensions&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToDateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reference&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentTimeZone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLocalTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecondsSinceReferenceDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考は↓だけど、使いやすいように Extension Method にしました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sourcerer.tumblr.com/post/502919332/nsdate-to-datetime-and-back&quot;&gt;I code therefore I am. - NSDate to DateTime and Back&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 02 Nov 2016 23:59:59 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/11/02/convert_nsdate_to_datetime_in_xamarin_ios/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/11/02/convert_nsdate_to_datetime_in_xamarin_ios/</guid>
        
        
        <category>Xamarin</category>
        
        <category>ios</category>
        
        <category>C#</category>
        
      </item>
    
      <item>
        <title>Xamarin Advent Calendar 2016 参加者募集中です</title>
        <description>&lt;p&gt;4年目の Xamarin Advent Calendar です。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.qiita.com/post/152366526084/adventcalendar2016&quot;&gt;「Qiita Advent Calendar 2016」の募集が始まりました - Qiita Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;とのことでさっそく&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2016/xamarin&quot;&gt;Xamarin Advent Calendar 2016 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を作成しました。&lt;/p&gt;

&lt;p&gt;なんと、募集開始からたったの2時間で25枠全部埋まりました(嬉しくて泣きそう&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/ytabuchi&quot;&gt;@ytabuchi&lt;/a&gt; さん始め &lt;a href=&quot;http://jxug.org&quot;&gt;JXUG&lt;/a&gt; の皆さん、 &lt;a href=&quot;https://twitter.com/chomado&quot;&gt;@chomado&lt;/a&gt; さん始めＭＳの方々のおかげです、本当にありがとうございます。&lt;/p&gt;

&lt;p&gt;仕事中ずっと監視してました(ぉぃ)が、 Qiita 内では最速ｗｗｗ （下は記念スクショ）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/join_xamarin_advent_calendar_2016_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/Fumiya_Kume&quot;&gt;@Fumiya_Kume&lt;/a&gt; 君が作ってくれた 学生さん、初心者さん向け、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2016/xamarin-student&quot;&gt;[学生さん・初心者さん大歓迎！]Xamarin Advent Calendar 2016 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;も満席、すご！（「どこがビギナーやねんｗ」というラインナップだがｗｗ）&lt;/p&gt;

&lt;p&gt;なので、それぞれ「その2」 を作りました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2016/xamarin2&quot;&gt;Xamarin(その2) Advent Calendar 2016 - Qiita&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2016/xamarin-welcome&quot;&gt;[初心者さん・学生さん大歓迎！] Xamarin その2 Advent Calendar 2016 - Qiita&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらはまだ空きがありますので、奮ってご応募下さい。&lt;/p&gt;

&lt;p&gt;あ、Xamarin Advent Calendar 4つ、購読もよろしくおねがいします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/advent-calendar/2016/xamarin&quot;&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/join_xamarin_advent_calendar_2016_02.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参加登録していただいた皆さんは、担当日忘れないでくださいね(ﾆｯｺﾘ)&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Oct 2016 22:11:37 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/27/join-xamarin-advent-calendar-2016/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/27/join-xamarin-advent-calendar-2016/</guid>
        
        
        <category>Xamarin</category>
        
        <category>AdventCalendar</category>
        
      </item>
    
      <item>
        <title>DroidKaigi2017 に Xamarin ネタでトーク応募したよ</title>
        <description>&lt;p&gt;神からの啓示がありまして、 &lt;a href=&quot;https://droidkaigi.github.io/2017/&quot;&gt;DroidKaigi2017&lt;/a&gt; のトークに応募しました。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;昨年 DroidKaigi2016 を聞きにいきました。 Kotlin、Go Mobile のセッションがありました。&lt;/p&gt;

&lt;p&gt;当時 Xamarin はまだプロプライエタリな有償の製品でした。今はほとんどオープンソースのプロダクトです。&lt;/p&gt;

&lt;p&gt;これはワンチャンあるで！&lt;/p&gt;

&lt;p&gt;応募内容は以下です。「○○界隈」いうのがあまり好きではないので、そういうのにこだわらない話をしたいと思っています。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;title&quot;&gt;Title&lt;/h2&gt;

&lt;p&gt;Xamarin.Android で始めるクロスプラットフォームモバイルアプリ開発&lt;/p&gt;

&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;対象者&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Android中級者〜&lt;/li&gt;
  &lt;li&gt;C# 初心者〜&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概要&lt;/h3&gt;

&lt;p&gt;Xamarin（ざまりん）は C# によるクロスプラットフォームモバイルアプリ開発ツールです。&lt;br /&gt;
Microsoft が2016年4月に買収して、一気に知名度が上がりました。&lt;/p&gt;

&lt;p&gt;このセッションでは、 Xamarin とは、Xamarin.Android とは何か、C# や .NET Framework(Mono) の強力な言語・ライブラリ機能について触れ、通常の Android アプリ開発と Xamarin を使ったアプリ開発はどこが違って、どこが同じなのかを説明します。&lt;/p&gt;

&lt;p&gt;また、今日のモバイルアプリ開発では、DataBinding、MVVM、Reactive Extensions(Rx) といった、Microsoft が源流となっている手法が広まって来ています。&lt;br /&gt;
Xamarin を使うと、MVVMパターンと Rx を使用し、大部分のコードを共有できる Android/iOS 両対応アプリケーションを開発できます。如何にしてコードを共有するか、できない場合にどのような解決策が用意されているかについてお話します。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;目次（仮）&lt;/h3&gt;

&lt;h4 id=&quot;xamarin-&quot;&gt;1. Xamarin とは？&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Xamarin とは何か&lt;/li&gt;
  &lt;li&gt;Xamarin.Android とは何か&lt;/li&gt;
  &lt;li&gt;C# の利点(Java, Swift との比較)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2. クロスプラットフォームアプリ開発とコードの共有&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;MVVMパターン&lt;/li&gt;
  &lt;li&gt;Reactive Extensions / ReactiveProperty&lt;/li&gt;
  &lt;li&gt;Portable Class Library(PCL)によるコード共有&lt;/li&gt;
  &lt;li&gt;プラットフォーム固有の処理を行う方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;open-xamarinopen-microsoft&quot;&gt;3. Open Xamarin、Open Microsoft&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Xamarin で使えるライブラリ(C#, Java)&lt;/li&gt;
  &lt;li&gt;All Xamarin SDKs are open source&lt;/li&gt;
  &lt;li&gt;.NET Standard&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;xamarin--1&quot;&gt;4. Xamarin の使いどころ&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;採用すべきケースとしなくてよいケース&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;topic&quot;&gt;Topic&lt;/h2&gt;

&lt;p&gt;開発環境・ツール (Productivity and Tooling)&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Tue, 25 Oct 2016 02:42:51 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/25/submit-cfp-for-droidkaigi2017/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/25/submit-cfp-for-droidkaigi2017/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Android</category>
        
        <category>C#</category>
        
        <category>DroidKaigi</category>
        
      </item>
    
      <item>
        <title>Xamarin を使わなくてもいい人たち</title>
        <description>&lt;p&gt;「Xamarin はいいぞ」ばかり言ってる私ですが、Xamarin がハマらないケースも当然あるわけで。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;　いくつかピックアップしてみたいと思います。&lt;/p&gt;

&lt;h2 id=&quot;android--ios-&quot;&gt;Android / iOS のスペシャリスト&lt;/h2&gt;

&lt;p&gt;　Android または iOS、Java や Swift が大好きで最先端を突っ走ってる人。&lt;br /&gt;
あるいは、最新のOSの機能をガンガンアプリに取り入れていくプロダクト。&lt;/p&gt;

&lt;p&gt;　彼(または彼女)達に「Xamarin 使えよ、C# 使えよ」って言っても彼らの楽しみを奪ってしまうのでしない方がいいし、SDK が新しくなったら即使いたいという欲求はネイティブでないと満たせないですよね。&lt;br /&gt;
　&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;配布サイズを気にするプロダクト&lt;/h2&gt;

&lt;p&gt;　Xamarin でアプリを作ると、Monoランタイムを同梱するため配布パッケージの容量がびっくりするくらい増えます。（Android の場合、HelloWorld でも 10MByte は切れないんじゃなかったかな？）&lt;br /&gt;
　プロダクトが、世界をターゲットにしていて、それに回線の細い新興国も含まれている場合、注意した方がよいと思います。&lt;br /&gt;
　&lt;/p&gt;
&lt;h2 id=&quot;section-1&quot;&gt;ガワネイティブでいいやつ&lt;/h2&gt;

&lt;p&gt;　Cordova, Monaca とかそういうの。例えばショッピングサイトのネイティブアプリだと、コンテンツの差し替えが激しいので HTML5 でモバイルWebサイトと共通化できたほうが運用の効率がよいです。&lt;br /&gt;
　&lt;/p&gt;
&lt;h2 id=&quot;section-2&quot;&gt;宗教上の理由&lt;/h2&gt;

&lt;p&gt;　マイクロソフトに親を殺された人は使わないでしょう。ただ、過去に何があったかは知らないですけど、今のマイクロソフトはあなたを殺しませんよ？&lt;br /&gt;
　&lt;br /&gt;
—-&lt;/p&gt;

&lt;p&gt;こんなもんかなあ。逆を言えば、上に当てはまらなければ Xamarin を選択しない理由はないわけで。&lt;/p&gt;

&lt;p&gt;やっぱり、「Xamarin はいいぞ」&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Oct 2016 23:59:59 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/18/who-dont-need-xamarin/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/18/who-dont-need-xamarin/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Android</category>
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>JXUGC #17 お前の Xamarin アプリを見せてみろ！ で発表してきました</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://jxug.connpass.com/event/39470/&quot;&gt;JXUGC #17 お前の Xamarin アプリを見せてみろ！ - connpass&lt;/a&gt; に参加、登壇してきました。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.xamarin.com/guides/xamarin-forms/datapages/&quot;&gt;Xamarin DataPages&lt;/a&gt; をネタにしましたが、今回は本当に準備が不足してすいませんでした。何かをでっちあげることしかできませんでした。&lt;/p&gt;

&lt;p&gt;他のみなさんのアプリや発表、完成度が高くて脱帽です。&lt;/p&gt;

&lt;p&gt;一応、資料はこちら。&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;f7a39d6e6d5742a185231e1e4e1d8953&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;ソースもあります。(Xamarinのリポジトリから切り取ってきた DataPages 関連のプロジェクト付き)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amay077/MikawaMorningApp&quot;&gt;amay077/MikawaMorningApp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回の参加は、たまには東京の人たちにも会いたいなーという動機、それから Xamarin.Forms.GoogleMaps の PR が目的でして。。。&lt;/p&gt;

&lt;p&gt;DataPages にそこまで期待しているわけじゃないけど、標準機能でできることが少ないなら Xamarin.Forms.GoogleMaps みたく、Fork して機能拡張しちゃえばいいやと軽い気持ちでソースを除いてみたのですが、うーむ分からん。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Xamarin.Forms.Pages.DataPage&lt;/code&gt; を継承したクラスに &lt;code class=&quot;highlighter-rouge&quot;&gt;ListDataPage&lt;/code&gt; というものがあって、これは与えられたデータソースを元に一覧画面を生成してくれます。更に、行を選択すると詳細画面も表示してくれます。&lt;/p&gt;

&lt;p&gt;ならば同じく &lt;code class=&quot;highlighter-rouge&quot;&gt;DataPage&lt;/code&gt; を継承して &lt;code class=&quot;highlighter-rouge&quot;&gt;MapDataPage&lt;/code&gt; を作ったら、一覧の代わりに地図にピン群が立つ画面を用意できるのでは？そんでピンをタップしたら詳細画面を表示できるのでは？と思ったのですが・・・。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MapDataPage&lt;/code&gt; を用意することはできました。データソースを元に地図にピン群を立たせることはできました。&lt;/p&gt;

&lt;p&gt;しかし、詳細ページを表示する方法が分かりませんでした。&lt;/p&gt;

&lt;p&gt;もうちょっと詳しく言うと、&lt;code class=&quot;highlighter-rouge&quot;&gt;ListDataPage&lt;/code&gt; で行を選択したときに &lt;a href=&quot;https://github.com/amay077/MikawaMorningApp/blob/master/Xamarin.Forms.Pages/ListDataPage.cs#L46&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DataTemplate.CreateContent()&lt;/code&gt;&lt;/a&gt; を呼び出していて、その返値が詳細画面となる &lt;code class=&quot;highlighter-rouge&quot;&gt;Page&lt;/code&gt; なのですが、 この &lt;code class=&quot;highlighter-rouge&quot;&gt;DataTemplate&lt;/code&gt; がよく分からない。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ListDataPage.DetailTemplateProperty&lt;/code&gt; への設定はいつだれが行っている？ DataTemplate は Xamarin.Forms.Core のソースなので、ちゃんとデバッグ環境作ればトレースできたかもしれません（だから Xamarin.Forms.Themes は関係ないかも知れない）が、ちょっと時間なく。。。&lt;/p&gt;

&lt;p&gt;この辺りの仕組みが分かれば、詳細画面で、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http: で始まる文字列には、ハイパーリンクを設定する&lt;/li&gt;
  &lt;li&gt;緯度経度だったら「地図」ボタンを表示する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などのカスタマイズもできると思うので、引き続きソースおっかけてみたいと思います。&lt;/p&gt;

&lt;p&gt;JXUG イベント多すぎだろ！と思いつつ、数回に１回は行きたいなーと思っているので、またよろしくおねがいします。&lt;/p&gt;

&lt;p&gt;最後に、「喫茶店で朝￥500円以上払ったらそれはモーニングサービスとは言わない」これはガチ。&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Oct 2016 19:29:05 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/16/gave-presentation-in-xamarin-jxugc-17/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/16/gave-presentation-in-xamarin-jxugc-17/</guid>
        
        
        <category>Xamarin</category>
        
        <category>勉強会</category>
        
      </item>
    
      <item>
        <title>MVP アワードキットが届きました</title>
        <description>&lt;p&gt;海の向こうから、「MVPアワードキット」が届きましたよっと。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;section&quot;&gt;箱！&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/received_mvp_award_kit_01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;中身！！&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/received_mvp_award_kit_02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;盾&lt;/li&gt;
  &lt;li&gt;置物&lt;/li&gt;
  &lt;li&gt;メンバーカードみたいなやつ&lt;/li&gt;
  &lt;li&gt;ピンバッジ&lt;/li&gt;
  &lt;li&gt;説明書みたいなやつ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;です。&lt;/p&gt;

&lt;p&gt;この他には書類とか MVP のステッカーとか。さっそく（会社の）MacBook Pro に貼ってやったぜぇー。&lt;/p&gt;

&lt;p&gt;MVPのセンパイ方も、初めて受賞したときはこういう事したんだろうなーと思いながら自分もやってしまったｗ&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Oct 2016 02:08:57 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/12/received-mvp-award-kit/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/12/received-mvp-award-kit/</guid>
        
        
        <category>Microsoft</category>
        
        <category>MVP</category>
        
      </item>
    
      <item>
        <title>初めて Microsoft MVP になりました！</title>
        <description>&lt;h4 id=&quot;microsoft--microsoft-mvphttpsmvpmicrosoftcomja-jpoverview-&quot;&gt;Microsoft から離れてモバイルアプリ開発者になったつもりが、いつの間にか &lt;a href=&quot;https://mvp.microsoft.com/ja-jp/overview&quot;&gt;Microsoft MVP&lt;/a&gt; になっていた&lt;/h4&gt;

&lt;!--more--&gt;

&lt;p&gt;何を言ってるのかわからねーと思うが、そういうことですｗ&lt;/p&gt;

&lt;p&gt;元々 VB や VC で Windows のアプリケーション開発をしていましたが、転職を機に Android/iOS アプリ開発にクラスチェンジしたのは2011年頃の話です。&lt;/p&gt;

&lt;p&gt;が、やっぱり C# が好きで、 &lt;a href=&quot;http://qiita.com/search?q=+user%3Aamay077+tag%3Axamarin&amp;amp;sort=stock&quot;&gt;2013年から「Xamarin はいいぞ！」と言い続けていた&lt;/a&gt; ら、Xamarin が Microsoft に買収され、Xamarin も Microsoft MVP の対象に！&lt;/p&gt;

&lt;p&gt;Xamarin 関係で、&lt;a href=&quot;https://twitter.com/iseebi&quot;&gt;@iseebi&lt;/a&gt; さんや &lt;a href=&quot;https://twitter.com/ytabuchi&quot;&gt;@ytabuchi&lt;/a&gt; さんが受賞されるなか、「こりゃワタシもワンチャンある？」と思い申請しましたらありがたく MVP になることができました。&lt;/p&gt;

&lt;p&gt;カテゴリは Visual Studio and Development Technologies ですが、Xamarin のことしか詳しくないので、これからも &lt;strong&gt;「Xamarin はいいぞ！」&lt;/strong&gt; と言い続けていきます。&lt;/p&gt;

&lt;p&gt;まだ Microsoft 系の開発者には浸透していないであろう Android/iOS アプリの開発ノウハウについて、あるいは両者の技術コミュニティが繋がるような活動ができれば、と思っています。&lt;/p&gt;

&lt;p&gt;（あ、 &lt;a href=&quot;http://aile.hatenablog.com/entry/2016/10/02/005811&quot;&gt;Xamarin.Macの人&lt;/a&gt; とは同期受賞になるのかな、 &lt;strong&gt;Windowsを使わないMVP&lt;/strong&gt; 同士、がんばりましょうｗ）&lt;/p&gt;

&lt;p&gt;年末にかけて、 Xamarin関連の勉強会には(地方からだけど)ちょいちょい顔を出しますし、12月には Xamarin Advent Calendar を今年もやります！&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;4年目となる Xamarin Advent Calendar 2016 もやるから皆さんよろ〜&lt;br /&gt;2015 - &lt;a href=&quot;https://t.co/EbFffM48no&quot;&gt;https://t.co/EbFffM48no&lt;/a&gt;&lt;br /&gt;2014 - &lt;a href=&quot;https://t.co/siRSDoDhJ8&quot;&gt;https://t.co/siRSDoDhJ8&lt;/a&gt;&lt;br /&gt;2013 - &lt;a href=&quot;https://t.co/JkdGFRt8i7&quot;&gt;https://t.co/JkdGFRt8i7&lt;/a&gt;&lt;/p&gt;&amp;mdash; これがあめいの選択だよ (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/777844707669909504&quot;&gt;2016年9月19日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;よろしくおねがいします。&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Oct 2016 17:40:18 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/10/02/become-microsoft-mvp-for-the-first-timme/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/10/02/become-microsoft-mvp-for-the-first-timme/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Microsoft</category>
        
        <category>MVP</category>
        
      </item>
    
      <item>
        <title>JetBrains の Open Source License をいただきました</title>
        <description>&lt;p&gt;　JetBrains は、 Androidアプリ開発者には Android Studio の元となっているIDE「IntelliJ IDEA」、C# 開発者には、Visual Studio拡張機能「ReSharper」を販売している企業としておなじみですよね。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;jetbrains-&quot;&gt;JetBrains 製品群とオープンソースライセンス&lt;/h2&gt;

&lt;p&gt;　そんな JetBrains 製品群、便利と聞きつつも個人では購入するのをためらっていました（Xamarin は有償でも買ってたのにな！）。&lt;/p&gt;

&lt;p&gt;その JetBrains に非商用のオープンソースプロジェクト開発者にライセンスを提供してくれる「Free Open Source License」があるのを知ったのは数ヶ月前のことです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/buy/opensource/&quot;&gt;JetBrains :: Opensource license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　「今の僕なら、 &lt;a href=&quot;https://github.com/amay077/Xamarin.Forms.GoogleMaps&quot;&gt;Xamarin.Forms.GoogleMaps&lt;/a&gt; 開発してるし、(少ないけど)コントリビューションしてくれる人も居るし、 nuget のダウンロード数も 1,800超えてるしワンチャンあるのでは？」 と思い申請してみました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Xamarin.Forms.GoogleMaps 作り始めて３ヶ月経ったので JetBrains OSS License ワンチャン&lt;/p&gt;&amp;mdash; これがあめいの選択だよ (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/781369150635507712&quot;&gt;2016年9月29日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;　すると驚き、ものの数時間で「おｋ、ライセンスやるお」ってメールが!はやっ！！&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;やったー！ JetBrains OSS License もらえた！！ってかレビューはやっ！ &lt;a href=&quot;https://t.co/i9yGYXCOsP&quot;&gt;pic.twitter.com/i9yGYXCOsP&lt;/a&gt;&lt;/p&gt;&amp;mdash; これがあめいの選択だよ (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/781428124399448064&quot;&gt;2016年9月29日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;　ありがとう JetBrains、そしてありがとう Xamarin と Microsoft。 Xamarin がオープンソースにしてくれたから、それをフォークして、自分のプロジェクトにできて、ライセンスもらえました。&lt;/p&gt;

&lt;p&gt;　これで超便利と噂の Resharper 先生が使えます（普段Macだけどな！）&lt;/p&gt;

&lt;p&gt;　Eclipse の代わりに IntelliJ IDEA 使うぞ！&lt;/p&gt;

&lt;p&gt;　今まで Early Access Program で何とか使ってた &lt;a href=&quot;https://www.jetbrains.com/datagrip/&quot;&gt;DataGrip&lt;/a&gt; もガッツリ使うぞ。&lt;/p&gt;

&lt;p&gt;　&lt;strong&gt;&lt;a href=&quot;https://www.jetbrains.com/rider/&quot;&gt;Rider&lt;/a&gt; のリリース心待ちにしてます。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　ほかのプロダクトは…あまり知らなかったけどいろいろ使ってみるぞ！&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;みんなもワンチャンあるで&lt;/h2&gt;

&lt;p&gt;　申請時、 Number of commiters 的な項目があったので、 &lt;a href=&quot;https://github.com/amay077/Xamarin.Forms.GoogleMaps/graphs/contributors&quot;&gt;Xamarin.Forms.GoogleMaps にコミットしてくれていた人の数&lt;/a&gt; で「3」と入力したら、ライセンスも3つくれました（残りの２つはコミッターの方々に提供するつもりです）。&lt;/p&gt;

&lt;p&gt;　これが意味するのは、&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自分でオープンソースプロジェクトを立ち上げなくても、どこからのプロジェクトに「積極的に」参加して、そのオーナーさんに「申請して」って言えばいいのでは&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　そのプロジェクトに大きめな関わりができて、良好な関係が築ければオーナーさんも引き受けてくれるのではないでしょうか（また、オーナーでなければ申請できないというルールでもないです）。JetBrains Open Source License について知らなければ、みんなにメリットのある事ですし。（コミッターが多い場合、いくつまで License を発行してくれるのかはさじ加減が必要かも知れませんが）&lt;/p&gt;

&lt;p&gt;　もちろん、自分でOSSを始めるのも全然アリです。Xamarin.Forms.GoogleMaps もほぼ一人プロジェクトで、歴史も浅く、規模もとても小さいです。あ、頑張って README などを英語で書いている、というのは効いているのかも知れません。&lt;/p&gt;

&lt;p&gt;　最後に宣伝ですが、 Xamarin.Forms.GoogleMaps にコントリビュートしていただければ、来年のライセンス更新時に「Number of commiters」を増やせて、参加して頂いた方にもライセンス供給できるかもしれませんので、プルリクなどよろしくおねがいします。&lt;a href=&quot;https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues&quot;&gt;ISSUES&lt;/a&gt; が溜まってきているのですｗ&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Sep 2016 21:28:17 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2016/09/29/got-jetbrains-opensource-lisence/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2016/09/29/got-jetbrains-opensource-lisence/</guid>
        
        
        <category>opensource</category>
        
        <category>jetbrains</category>
        
      </item>
    
  </channel>
</rss>
